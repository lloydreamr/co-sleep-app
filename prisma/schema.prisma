// Prisma schema for Co-Sleep app
// Models: User, SleepSession, Block, Favorite, Report, Rating, Subscription, SleepAnalytics, BackgroundSound, UserSound
// All relations and fields are documented for clarity

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =====================
// User Management
// =====================
model User {
  id            String   @id @default(cuid()) // Unique user ID
  email         String   @unique              // User email (unique)
  username      String?  @unique              // Optional username (unique)
  name          String?                       // Optional display name
  password      String?                       // Hashed password
  avatar        String?                       // Optional avatar URL
  timezone      String   @default("UTC")      // User's timezone
  createdAt     DateTime @default(now())      // Account creation timestamp
  updatedAt     DateTime @updatedAt           // Last update timestamp

  // Relationships
  sleepSessions    SleepSession[] @relation("UserSessions")      // Sessions as user
  partnerSessions  SleepSession[] @relation("PartnerSessions")   // Sessions as partner

  @@map("users")
}

// =====================
// Sleep Sessions (voice call sessions between users)
// =====================
model SleepSession {
  id          String   @id @default(cuid()) // Unique session ID
  userId      String                          // User who started session
  partnerId   String?                         // Optional partner user ID
  startTime   DateTime                        // Session start time
  endTime     DateTime?                       // Session end time
  duration    Int?     // in minutes          // Session duration
  quality     Int?     // 1-5 rating          // User-reported quality
  notes       String?                         // Optional session notes
  createdAt   DateTime @default(now())        // Record creation timestamp

  // Connection Details
  connectionQuality String?                   // "excellent", "good", etc.
  iceServersUsed   String[]                   // ICE servers used for connection
  connectionType   String?                    // "direct", "relay", "host"

  // User Relationships
  user        User     @relation("UserSessions", fields: [userId], references: [id], onDelete: Cascade) // Session owner
  partner     User?    @relation("PartnerSessions", fields: [partnerId], references: [id], onDelete: SetNull) // Session partner

  @@map("sleep_sessions")
}
